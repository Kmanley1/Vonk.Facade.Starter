{
  "PipelineOptions": {
    "PluginDirectory": "./plugins",
    "Branches": [
      {
        "Path": "/",
        "Include": [
          "Vonk.Core",
          "Vonk.Fhir.R3",
          "Vonk.Fhir.R4",
          "Vonk.Repository.Sql.SqlVonkConfiguration",
          "Vonk.Repository.Sqlite.SqliteVonkConfiguration",
          "Vonk.Repository.MongoDb.MongoDbVonkConfiguration",
          "Vonk.Repository.CosmosDb.CosmosDbVonkConfiguration",
          "Vonk.Repository.Memory.MemoryVonkConfiguration",
          "Vonk.Subscriptions",
          "Vonk.Smart",
          "Vonk.UI.Demo",
          "Vonk.Plugin.DocumentOperation.DocumentOperationConfiguration",
          "Vonk.Plugin.ConvertOperation.ConvertOperationConfiguration",
          "Vonk.Plugin.BinaryWrapper.BinaryWrapperConfiguration",
          "Vonk.Plugin.MappingToStructureMap.MappingToStructureMapConfiguration",
          "Vonk.Plugin.TransformOperation.TransformOperationConfiguration"
        ],
        "Exclude": [
          "Vonk.Subscriptions.Administration"
        ]
      },
      {
        "Path": "/administration",
        "Include": [
          "Vonk.Core",
          "Vonk.Fhir.R3",
          "Vonk.Fhir.R4",
          "Vonk.Repository.Sql.SqlAdministrationConfiguration",
          "Vonk.Repository.Sqlite.SqliteAdministrationConfiguration",
          "Vonk.Repository.MongoDb.MongoDbAdminConfiguration",
          "Vonk.Repository.Memory.MemoryAdministrationConfiguration",
          "Vonk.Subscriptions.Administration",
          "Vonk.Plugins.Terminology",
          "Vonk.Administration"
        ],
        "Exclude": [
          "Vonk.Core.Operations",
          "Vonk.Core.Licensing.LicenseRequestJobConfiguration"
        ]
      }
    ]
  },
  "License": {
    "LicenseFile": "vonk-license.json"
  },
  "SupportedInteractions": {
    "InstanceLevelInteractions": "read, vread, update, delete, history, conditional_delete, conditional_update, $validate",
    "TypeLevelInteractions": "create, search, history, $validate, $snapshot, conditional_create",
    "WholeSystemInteractions": "capabilities, batch, transaction, history, search, $validate"
  },
  "DbOptions": {
    "ConnectionString": "Server=Dev2;Database=ViSi;Trusted_Connection=True;"
  },
  "MetadataImportOptions": {
    "Enabled": true,
    "Sets": [
      {
        "Source": "Api"
      }
    ]
  },
  "SupportedModel": {
    "RestrictToResources": [ "Patient", "Observation" ],
    "RestrictToSearchParameters": [
      "Resource._id",
      "Patient.identifier",
      "Observation.subject",
      "StructureDefinition.url"
    ]
  },
  "BundleOptions": {
    "DefaultCount": 10,
    "MaxCount": 50
  },
  "SmartAuthorizationOptions": {
    "Enabled": false,
    "Filters": [
      {
        "FilterType": "Patient", //Filter on a Patient compartment if a 'patient' launch scope is in the auth token
        "FilterArgument": "identifier=#patient#" //... for the Patient that has an identifier matching the value of that 'patient' launch scope
      },
      {
        "FilterType": "Encounter", //Filter on an Encounter compartment if an 'encounter' launch scope is in the auth token
        "FilterArgument": "identifier=#encounter#" //... for the Encounter that has an identifier matching the value of that 'encounter' launch scope
      },
      {
        "FilterType": "Location", //Filter on a Location compartment if a 'location' launch scope is in the auth token
        "FilterArgument": "identifier=#location#" //... for the Location that has an identifier matching the value of that 'location' launch scope
      }
    ],
    "Authority": "https://localhost:5101",
    "Audience": "vonk",
    "RequireHttpsToProvider": false, //You want this set to true (the default) in a production environment!
    "Protected": {
      "InstanceLevelInteractions": "read, vread, update, delete, history, conditional_delete, conditional_update, $validate",
      "TypeLevelInteractions": "create, search, history, conditional_create",
      "WholeSystemInteractions": "batch, transaction, history, search"
    }
  },
  "Logging": {
    "Debug": {
      "LogLevel": {
        "Default": "Debug"
      }
    },
    "Console": {
      "IncludeScopes": false,
      "LogLevel": {
        "Vonk": "Information",
        "Default": "Information"
      }
    },
    "LogLevel": {
      "Default": "Debug"
    }
  }
}
